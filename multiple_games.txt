The server continually accepts new TCP connections and, as each client sends its initial WANTGAME message, enqueues that socket in a waiting list. As soon as two clients are queued, the server atomically removes both from the list, wraps them in a Game object, and spawns a dedicated daemon thread to run the handle_game protocol for that pair. Inside each game thread, the server shuffles and deals two 26-card hands, sends each GAMESTART, then loops through 26 PLAYCARD → PLAYRESULT exchanges before closing both sockets—handling any invalid messages by terminating just that game. Meanwhile, the main serve_game loop remains entirely non-blocking, accepting and pairing further clients so that multiple War matches proceed in parallel without interference.